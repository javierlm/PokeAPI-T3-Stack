import "@/styles/globals.css";

import "@/styles/globals.css";

import { type Metadata } from "next";
import { Geist } from "next/font/google";

import { TRPCReactProvider } from "@/trpc/react";
import Navbar from "./_components/Navbar";
import { LoadingProvider } from "@/context/LoadingContext";
import { ClientThemeProvider } from "./_components/ClientThemeProvider";
import BackToTopButton from "./_components/BackToTopButton";
import { ScrollProvider } from "@/context/ScrollContext";
import { getLocaleFromCookie } from "@/lib/locale";
import { LanguageProvider } from "@/context/LanguageContext";
import IntlProvider from "./_components/IntlProvider";

export const metadata: Metadata = {
  title: "PokeAPI App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
  preload: false,
});

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const locale = await getLocaleFromCookie();
  const messages = (
    (await import(`../../messages/${locale}.json`)) as {
      default: IntlMessages;
    }
  ).default;

  return (
    <html
      lang={locale}
      className={`${geist.variable} h-full`}
      suppressHydrationWarning
    >
      <body className="bg-background text-foreground h-full">
        <ClientThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
        >
          <IntlProvider locale={locale} messages={messages}>
            <TRPCReactProvider>
              <LanguageProvider initialLocale={locale}>
                <LoadingProvider>
                  <div className="flex h-full flex-col">
                    <Navbar />
                    <ScrollProvider>
                      {children}
                      <BackToTopButton />
                    </ScrollProvider>
                  </div>
                </LoadingProvider>
              </LanguageProvider>
            </TRPCReactProvider>
          </IntlProvider>
        </ClientThemeProvider>
      </body>
    </html>
  );
}
